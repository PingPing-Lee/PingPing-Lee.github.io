(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{412:function(s,a,t){"use strict";t.r(a);var e=t(14),r=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"m1芯片的mac机上搭建rn开发环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#m1芯片的mac机上搭建rn开发环境"}},[s._v("#")]),s._v(" M1芯片的MAC机上搭建RN开发环境")]),s._v(" "),a("h2",{attrs:{id:"安装-xcode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-xcode"}},[s._v("#")]),s._v(" 安装 Xcode")]),s._v(" "),a("p",[s._v("进入 App Store 中安装 Xcode，安装好之后再进入后续步骤。"),a("br"),s._v("\n这里需要注意 xcode 和 Mac电脑的系统版本有着一定的对应关系，"),a("a",{attrs:{href:"https://xcodereleases.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("请戳这里"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"安装-homebrew"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-homebrew"}},[s._v("#")]),s._v(" 安装 Homebrew")]),s._v(" "),a("p",[s._v("Homebrew ，并使用它来管理 Mac 中的各类环境依赖"),a("br"),s._v("\n根据官方规划，ARM 版 Homebrew 必须安装在 /opt/homebrew 路径下，而非此前的 /usr/local/Homebrew。"),a("br"),s._v("\n由于官方的安装脚本还未更新，所以打开终端，通过如下命令手动安装：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("切换到 /opt 目录")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /opt\n")])])])]),s._v(" "),a("li",[a("p",[s._v("创建 homebrew 目录")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" homebrew\n")])])])]),s._v(" "),a("li",[a("p",[s._v("指令")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("curl "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("L")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("https")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Homebrew"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("brew"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("tarball"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("master "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" tar xz "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("strip "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("C")]),s._v(" homebrew\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" 如果报错请试试下面这个： "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("zsh "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("c "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)"')]),s._v("\n")])])]),a("p",[a("em",[a("font",{attrs:{color:"#d63200"}},[s._v("提示：")])],1),a("br"),s._v("\n如果安装和使用过程中报错，可能是因为当前用户对 /opt/homebrew 路径没有操作权限。"),a("br"),s._v("\n对此，可以通过 "),a("code",[s._v("sudo chown -R $(whoami) /opt/homebrew")]),s._v(" 更改该目录权限")])]),s._v(" "),a("li",[a("p",[s._v("配置 brew 的环境变量"),a("br"),s._v("\n默认情况下，ARM 版 Homebrew 用来安装程序的路径 /opt/homebrew/bin 并不在环境变量 PATH 中，因此终端无法检索到该路径下的 brew 程序，需要配置 "),a("code",[s._v(".zshrc")]),s._v(" 文件，找到 "),a("code",[s._v(".zshrc")]),s._v(" 文件到方法如下：")]),s._v(" "),a("ul",[a("li",[s._v("方法一：\n"),a("ul",[a("li",[s._v("快捷键 Command+Shift+. 可以显示隐藏文件、文件夹，再按一次，恢复隐藏；")])])]),s._v(" "),a("li",[s._v("方法二：\n"),a("ul",[a("li",[s._v("在终端输入  defaults write com.apple.finder AppleShowAllFiles -boolean true ; killall Finder，然后回车")])])])]),s._v(" "),a("p",[s._v("找到 .zshrc 文件之后，复制以下内容到 文件中：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/opt/homebrew/bin'")]),s._v(" $path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PATH")]),s._v("\n")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("brew -v")]),s._v(" 查看"),a("br"),s._v("\n然后重新启动终端，查看 brew是否安装好：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/rn/1.png",alt:"1.png"}})])])]),s._v(" "),a("h2",{attrs:{id:"安装-nvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-nvm"}},[s._v("#")]),s._v(" 安装 Nvm")]),s._v(" "),a("p",[s._v("Nvm 是一个管理 Node 版本的工具，当项目多了以后，总会碰到需要切换 Node 环境的时候，所以推荐使用 Nvm 来安装 Node。")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("Homebrew 安装 Nvm")]),s._v(" "),a("p",[s._v("若是你已经按上述步骤安装好了 Homebrew，那么你可以直接通过 Homebrew 的命令轻松安装 Nvm，打开终端，在根目录中输入：")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("brew install nvm\n")])])]),a("p",[s._v("安装完成后brew会给出一些提示，如下图：\n"),a("img",{attrs:{src:"/img/rn/nvm.png",alt:"install"}})])]),s._v(" "),a("li",[a("p",[s._v("设置 Nvm 的环境变量\n根据上图提示")]),s._v(" "),a("ul",[a("li",[s._v("在终端创建 .nvm 目录")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" ~/.nvm\n")])])]),a("ul",[a("li",[s._v("编辑 .zshrc 配置文件，如果没有请创建，然后把上图红色框中内容复制到文件中")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" ~/.zshrc\n")])])]),a("ul",[a("li",[s._v("在 ~/.zshrc 配置文件内容最后添加上图红色框中的内容")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NVM_DIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$HOME/.nvm"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("s "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/opt/nvm/nvm.sh"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" \\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/opt/nvm/nvm.sh"')]),s._v("  # This loads nvm\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("s "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/opt/nvm/etc/bash_completion.d/nvm"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" \\"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/local/opt/nvm/etc/bash_completion.d/nvm"')]),s._v("  # This loads nvm bash_completion\n")])])]),a("ul",[a("li",[s._v(":wq 保存并退出, 使用 source 命令使配置生效")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.zshrc\n")])])])]),s._v(" "),a("li",[a("p",[s._v("查看")]),s._v(" "),a("ul",[a("li",[s._v("查看配置是否生效：\n"),a("img",{attrs:{src:"/img/rn/NVM_DIR.png",alt:"NVM_DIR.png"}})]),s._v(" "),a("li",[s._v("nvm -v 查看版本\n"),a("img",{attrs:{src:"/img/rn/nvm-v.png",alt:"nvm-v.png"}})]),s._v(" "),a("li",[s._v("nvm -help")])]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("nvm "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-help")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nNote:\nto remove, delete, or uninstall nvm - just remove the "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("$NVM_DIR"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" folder "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("usually "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("~/.nvm"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("ul",[a("li",[s._v("在终端执行 nvm -help 命令，我们可以看到的最后一句话，删除卸载nvm只需要移除$NVM_DIR文件夹，一般是~/.nvm")]),s._v(" "),a("li",[s._v("注意：nvm安装流程大同小异，主要是最后的配置阶段里面的路径一定要配置正确，这样才能确保你的nvm命令可用。")]),s._v(" "),a("li",[s._v("重启终端即可使用 NVM")])])]),s._v(" "),a("li",[a("p",[s._v("常用 nvm 命令")])])]),s._v(" "),a("ul",[a("li",[s._v("查看已安装的版本："),a("code",[s._v("nvm ls")])]),s._v(" "),a("li",[s._v("查看可以安装的版本："),a("code",[s._v("nvm ls-remote")])]),s._v(" "),a("li",[s._v("安装指定的版本："),a("code",[s._v("nvm install version")])]),s._v(" "),a("li",[s._v("删除指定的版本："),a("code",[s._v("nvm uninstall version")])]),s._v(" "),a("li",[s._v("使用选定的版本："),a("code",[s._v("nvm use version")])]),s._v(" "),a("li",[s._v("安装最新的可用版本 "),a("code",[s._v("nvm install node")])]),s._v(" "),a("li",[s._v("安装最新的 LTS 版本 "),a("code",[s._v("nvm install --lts")])]),s._v(" "),a("li",[s._v("设置默认 node 版本 "),a("code",[s._v("nvm alias default version")])]),s._v(" "),a("li",[s._v("解除当前版本绑定 "),a("code",[s._v("nvm deactivate version")])])]),s._v(" "),a("h2",{attrs:{id:"安装-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-node"}},[s._v("#")]),s._v(" 安装 Node")]),s._v(" "),a("p",[s._v("接下来我们通过 nvm 来安装 Node，打开终端输入以下指令：\n"),a("code",[s._v("nvm install stable # 安装最新稳定版")]),s._v("\n然后查看 Node 是否安装好：node -v\n"),a("img",{attrs:{src:"/img/rn/3.png",alt:"3.png"}})]),s._v(" "),a("h3",{attrs:{id:"如何安装-v14-及以下的老版本-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何安装-v14-及以下的老版本-node"}},[s._v("#")]),s._v(" 如何安装 v14 及以下的老版本 Node")]),s._v(" "),a("p",[s._v("此时通过 nvm 安装最新的 node 版本没有什么问题，可以正常安装，这是因为最新版本的nvm和node，已经对M1做了兼容处理。\n但是当通过 nvm 安装 v14 及以下的老版本 Node 时，就会报错，究其原因还是因为低版本的 node 并不是基于 arm64 架构的，所以不适配 M1 芯片。在这里教大家两个方法，就能成功安装上低版本 Node。")]),s._v(" "),a("ol",[a("li",[s._v("方法一： 在终端输入以下命令：\n"),a("ul",[a("li",[a("code",[s._v("arch -x86_64 zsh")]),s._v("\n通过这个命令可以让 shell 运行在Rosetta2下\n之后你可以通过 nvm install v14  来安装低版本 Node\n在此之后，您可以不用在 Rosetta2 中就可以使用安装的可执行文件，也就是说，您可以将 Node v15与其他节点版本互换使用")])])]),s._v(" "),a("li",[s._v("方法二：通过 Rosetta2 来启动终端，这样通过 Rosetta2 转译到 x86 架构中执行安装，也一样可以安装成功\n"),a("ul",[a("li",[s._v("在 finder 中，点击应用程序，并在实用工具中找到终端 (Terminal)")]),s._v(" "),a("li",[s._v("右键终端，点击显示简介(Get Info)")]),s._v(" "),a("li",[s._v("勾选 使用 Rosetta 打开\n"),a("img",{attrs:{src:"/img/rn/4.png",alt:"4.png"}})]),s._v(" "),a("li",[s._v("重启终端，并执行 nvm install  v14 来安装低版本 Node")])])])]),s._v(" "),a("p",[s._v("至此 M1芯片的MAC机上就已经完成了React Native开发环境的前期搭建，完成这部分工作后，就可以搭建React Native环境了，具体的安装步骤请参考 RN 中文网")]),s._v(" "),a("h2",{attrs:{id:"安装-watchman"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-watchman"}},[s._v("#")]),s._v(" 安装 Watchman")]),s._v(" "),a("p",[a("code",[s._v("brew install watchman")])]),s._v(" "),a("h2",{attrs:{id:"安装cocoapods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装cocoapods"}},[s._v("#")]),s._v(" 安装CocoaPods")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" gem "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" cocoapods\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);