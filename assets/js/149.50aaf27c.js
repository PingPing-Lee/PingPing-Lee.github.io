(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{422:function(s,t,a){"use strict";a.r(t);var e=a(14),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("下面我们来详细的介绍如何打包和发布React Native iOS App")]),s._v(" "),t("h2",{attrs:{id:"_1-导出js-bundle包和图片资源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-导出js-bundle包和图片资源"}},[s._v("#")]),s._v(" 1. 导出js bundle包和图片资源")]),s._v(" "),t("p",[s._v("和打包React Native Android应用不同的是，我们无法通过命令一步进行导出React Native iOS应用。我们需要将JS部分的代码和图片资源等打包导出，然后通过XCode将其添加到iOS项目中。")]),s._v(" "),t("h3",{attrs:{id:"导出js-bundle的命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导出js-bundle的命令"}},[s._v("#")]),s._v(" 导出js bundle的命令")]),s._v(" "),t("p",[s._v("在React Native项目的根目录下查看 bundles 文件夹(如果没有则新建)，然后执行以下命令：")]),s._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("react-native bundle "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--platform")]),s._v(" ios --entry-file index.js --bundle-output ./bundles/main.jsbundle --assets-dest  ./bundles "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("--dev")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n")])])]),t("p",[s._v("通过上述命令，我们可以将JS部分的代码和图片资源等打包导出到 bundles 目录下：")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/rn/bundles.png",alt:"bundles"}})]),s._v(" "),t("p",[s._v("其中，assets为项目中的JS部分所用到的图片资源(不包括原生模块中的图片资源)，main.jsbundle是JS部分的代码。")]),s._v(" "),t("h2",{attrs:{id:"_2-将js-bundle包和图片资源导入到ios项目中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-将js-bundle包和图片资源导入到ios项目中"}},[s._v("#")]),s._v(" 2. 将js bundle包和图片资源导入到iOS项目中")]),s._v(" "),t("p",[s._v("这一步我们需要用到XCode，选择assets文件夹与main.jsbundle文件将其拖拽到XCode的项目导航面板中即可。")]),s._v(" "),t("p",[t("img",{attrs:{src:"/img/rn/assets.png",alt:"assets"}})]),s._v(" "),t("p",[s._v("然后，修改AppDelegate.m文件，添加如下代码：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NSURL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("sourceURLForBridge"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("RCTBridge "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("bridge\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n#"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DEBUG")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("RCTBundleURLProvider sharedSettings"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" jsBundleURLForBundleRoot"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("@"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"index"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("fallbackResource")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("nil"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n#"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//没有使用CodePush热更新的情况")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// return [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//如果在项目中使用了CodePush热更新，那么我们需要就可以直接通过CodePush来读取本地的jsbundle，方法如下： For React Native >=0.59,https://github.com/microsoft/react-native-code-push/blob/master/docs/setup-ios.md")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("CodePush bundleURL"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n#endif\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("上述代码的作用是让React Native去使用我们刚才导入的jsbundle，这样以来我们就摆脱了对本地nodejs服务器的依赖。")]),s._v(" "),t("p",[s._v("到目前为止呢，我们已经将js bundle包和图片资源导入到iOS项目中，接下来我们就可以发布我们的iOS应用了。")]),s._v(" "),t("p",[s._v("RN 应用和纯iOS应用打包唯一不同的是上面两步，按照这个教程执行完第二步，剩下的步骤就和iOS正常APP打包一样了")]),s._v(" "),t("h2",{attrs:{id:"发布ios应用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布ios应用"}},[s._v("#")]),s._v(" 发布iOS应用")]),s._v(" "),t("p",[s._v("接下来的打包和发布流程和一个正常的iOS应用的步骤是一模一样的，主要涉及以下几个流程：")]),s._v(" "),t("ul",[t("li",[s._v("需要有一个99美元的账号用于将App上传到AppStore，或者是299美元的企业级账号用于将App发布到自己公司的服务器或第三方公司的服务器，如果还没有iOS开发者账号，网上有很多教程可以参考着申请下："),t("br"),s._v(" "),t("a",{attrs:{href:"https://www.baidu.com/s?wd=iOS%E5%BC%80%E5%8F%91%E8%80%85%E8%B4%A6%E5%8F%B7%E7%94%B3%E8%AF%B7",target:"_blank",rel:"noopener noreferrer"}},[s._v("iOS开发者账号申请"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("配置证书，开发这账号申请好之后需要在我们电脑上配置下开发者证书：\n"),t("a",{attrs:{href:"https://www.baidu.com/s?wd=iOS%E5%BC%80%E5%8F%91%E8%80%85%E8%AF%81%E4%B9%A6%E9%85%8D%E7%BD%AE",target:"_blank",rel:"noopener noreferrer"}},[s._v("iOS开发者证书配置"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("归档打包与部署")])]),s._v(" "),t("h3",{attrs:{id:"归档打包与部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#归档打包与部署"}},[s._v("#")]),s._v(" 归档打包与部署")])])}),[],!1,null,null,null);t.default=n.exports}}]);