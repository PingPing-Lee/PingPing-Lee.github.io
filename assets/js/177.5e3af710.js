(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{447:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("当我们在遇到需要更新 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("State")])],1),t._v(" 中变量的需求时，要如何更改呢，如上一篇文章中我们定义了 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("count")])],1),t._v(" 变量，如果我们想要实现 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("count")])],1),t._v(" 数可以 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("+1")])],1),t._v("，你的惯性思路可能是是如下：")]),t._v(" "),s("ol",[s("li",[t._v("我们在 "),s("em",[s("font",[t._v("src -> components")])],1),t._v(" 下面创建 "),s("em",[s("font",[t._v("Add")])],1),t._v(" 组件，并定义一个 "),s("em",[s("font",[t._v("+1")])],1),t._v(" 的按钮，同时给 "),s("em",[s("font",[t._v("+1")])],1),t._v(" 按钮定义 "),s("em",[s("font",[t._v("click")])],1),t._v(" 事件，点击按钮实现，"),s("em",[s("font",[t._v("count")])],1),t._v(" 数值 "),s("em",[s("font",[t._v("+1")])],1),t._v("，具体操作如下：")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@click")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("btnHandler1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("+1"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("在 "),s("em",[s("font",[t._v("methods")])],1),t._v(" 中定义处理事件实现 "),s("em",[s("font",[t._v("count++")])],1),t._v("，代码如下：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("btnHandler1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" \n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),s("p",[t._v("然后执行代码会发现结果可以正常运行，这时你可能想自己这种操作是合法的，其实这种操作是完全不正确的，这是因为我们在组件中之间通过 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("$store")])],1),t._v(" 修改了 全局数据，但是在 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Vue")])],1),t._v(" 中是不允许组件去直接修改 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Store")])],1),t._v(" 里面的数据，所以千万不能这样写，正确的写法应该是用 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Mutation")])],1),t._v(" 修改数据。")]),t._v(" "),s("h2",{attrs:{id:"_1-mutation-的作用是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-mutation-的作用是什么"}},[t._v("#")]),t._v(" 1. Mutation 的作用是什么？")]),t._v(" "),s("p",[s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Mutation")])],1),t._v(" 用于变更 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Store")])],1),t._v(" 中的数据，在 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Vuex")])],1),t._v(" 中推荐我们使用 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Mutation")])],1),t._v(" 更新数据，特点有以下几点：")]),t._v(" "),s("ul",[s("li",[t._v("只能通过 "),s("em",[s("font",[t._v("Mutation")])],1),t._v(" 变更 "),s("em",[s("font",[t._v("Store")])],1),t._v(" 数据，不可以直接操作 "),s("em",[s("font",[t._v("Store")])],1),t._v(" 中的数据")]),t._v(" "),s("li",[t._v("通过这种方式虽然操作起来稍微繁琐一些，但是可以集中监控所有数据的变化，方便后期的维护")])]),t._v(" "),s("h2",{attrs:{id:"_2-mutation-要如何使用呢"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-mutation-要如何使用呢"}},[t._v("#")]),t._v(" 2. Mutation 要如何使用呢？")]),t._v(" "),s("p",[t._v("示例代码如下：")]),t._v(" "),s("ul",[s("li",[t._v("定义 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Mutation")])],1)])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" store "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vuex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stroe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("count")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("mutations")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 变更状态")]),t._v("\n     state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" \n     \n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果再触发时需要传递参数，那就可以如下定义")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// add(state, step){")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  state.count += step")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[t._v("通过 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("commit")])],1),t._v(" 触发 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Mutation")])],1)])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//触发 mutation 的第一种方式")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$store"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("commit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在调用 commit 函数，触发 mutation 时携带参数，需要如下触发")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this.$store.commit('addN',3)")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"触发-mutations-的第二种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#触发-mutations-的第二种方式"}},[t._v("#")]),t._v(" 触发 mutations 的第二种方式")]),t._v(" "),s("ol",[s("li",[t._v("从 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Vuex")])],1),t._v(" 中按需导入 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("mapMutations")])],1),t._v(" 函数")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" mapMutations "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vuex'")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("通过刚才导入的 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("mapMutations")])],1),t._v(" 函数，将当前组件需要 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Mutations")])],1),t._v(" 函数，映射为当前组件的 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("methods")])],1),t._v(" 方法：")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("methods")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mapMutations")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'addN'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在使用 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("mutations")])],1),t._v(" 时，请注意不要在 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("mutations")])],1),t._v(" 函数中执行异步操作，如果有执行异步操作的需求要如何实现呢？请看下一篇文章 "),s("RouterLink",{attrs:{to:"/vue/vuex/action.html"}},[t._v("Action")])],1)])}),[],!1,null,null,null);s.default=r.exports}}]);