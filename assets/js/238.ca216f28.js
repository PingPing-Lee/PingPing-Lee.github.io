(window.webpackJsonp=window.webpackJsonp||[]).push([[238],{511:function(t,s,v){"use strict";v.r(s);var _=v(14),a=Object(_.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("在正式编写 WebGL 之前，我们来了解一些 WebGL 的关键名词：")]),t._v(" "),s("h2",{attrs:{id:"渲染管线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#渲染管线"}},[t._v("#")]),t._v(" 渲染管线")]),t._v(" "),s("p",[t._v("渲染管线就像一条流水线，由一系列具有特定功能的数字电路单元组成，下一个功能单元处理上一个功能单元生成的数据，逐级处理数据，通过一张图了解更透彻：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/webgl/base/xrgx.png",alt:"base64"}})]),t._v(" "),s("p",[t._v("图片上的有两个关键名词 "),s("strong",[t._v("顶点着色器")]),t._v(" 和 "),s("strong",[t._v("片元着色器")]),t._v("，这是两个可编程的功能单元，拥有更大的自主性，还有光栅器、深度测试等不可编程的功能单元")]),t._v(" "),s("h2",{attrs:{id:"着色器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#着色器"}},[t._v("#")]),t._v(" 着色器")]),t._v(" "),s("p",[t._v("上面我们了解到 "),s("strong",[t._v("着色器")]),t._v(" 这个名词，那具体的着色器是什么呢？")]),t._v(" "),s("p",[s("strong",[t._v("着色器")]),t._v(" 本质上是一段以字符串的形式存在 js 中的代码，简单来说就是让开发者自己去编写一段程序，代替固定渲染管线，来处理图像的渲染")]),t._v(" "),s("p",[t._v("在 WebGL 中所有图形的绘制操作都需要通过 "),s("strong",[t._v("着色器")]),t._v(" 实现，同时这也是 WebGL 里重要且难的知识点，因为其实现是千变万化的，比如同一段程序可以实现不同的功能，不同的程序也可以实现同一个功能")]),t._v(" "),s("h3",{attrs:{id:"顶点着色器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#顶点着色器"}},[t._v("#")]),t._v(" 顶点着色器")]),t._v(" "),s("p",[s("strong",[t._v("顶点")]),t._v(" 是指二维三维空间中的一个点，可以理解为坐标")]),t._v(" "),s("p",[s("strong",[t._v("顶点着色器")]),t._v(" GPU渲染管线上一个可以执行着色器语言的功能单元，具体执行的就是顶点着色器程序，在Javascript中以字符串的形式存在，通过编译处理后传递给顶点着色器执行")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/webgl/base/ddzsq.png",alt:"顶点着色器"}})]),t._v(" "),s("p",[s("strong",[t._v("顶点着色器")]),t._v(" 主要是用来描述顶点的特性，通过计算获取位置信息，然后赋值给内置变量 gl_Position，作为顶点着色器的输出，图元装配和光栅化环节的输入。")]),t._v(" "),s("h3",{attrs:{id:"图元装配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图元装配"}},[t._v("#")]),t._v(" 图元装配")]),t._v(" "),s("p",[s("strong",[t._v("图元装配(primitive assembly)")]),t._v(" 是将独⽴的顶点坐标装配成几何图形，图形的类别由 gl.drawArrays() 第⼀个参数确定")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/webgl/base/tyzp.png",alt:"图元装配"}})]),t._v(" "),s("ul",[s("li",[t._v("gl.LINES 的定义的是把两个顶点装配成一个线条图元")]),t._v(" "),s("li",[t._v("gl.TRIANGLES 定义的是三个顶点装配为一个三角面图元")]),t._v(" "),s("li",[t._v("gl.POINTS 定义的是一个点域图元")])]),t._v(" "),s("h3",{attrs:{id:"光栅化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#光栅化"}},[t._v("#")]),t._v(" 光栅化")]),t._v(" "),s("p",[t._v("这一步是将装配好的图形转换为片元\n"),s("img",{attrs:{src:"/img/webgl/base/gsh.png",alt:"图元装配"}})]),t._v(" "),s("h3",{attrs:{id:"片元着色器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#片元着色器"}},[t._v("#")]),t._v(" 片元着色器")]),t._v(" "),s("p",[s("strong",[t._v("片元")]),t._v(" 可以理解为一个个像素")]),t._v(" "),s("p",[s("strong",[t._v("片元着色器")]),t._v(" 和顶点着色器一样是GPU渲染管线上一个可以执行着色器程序的功能单元，进行逐片元处理片元程序，通过计算获取颜色信息")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/webgl/base/pyzsq.png",alt:"片元着色器"}})]),t._v(" "),s("p",[t._v("通过给内置变量gl_FragColor 赋值可以给每一个片元进行着色， 值可以是一个确定的 RGBA 值，可以是一个和片元位置相关的值，也可以是插值后的顶点颜色。")]),t._v(" "),s("p",[t._v("除了给片元进行着色之外，通过关键字 discard 还可以实现哪些片元可以被丢弃，被丢弃的片元不会出现在帧缓冲区，自然不会显示在canvas画布上。")])])}),[],!1,null,null,null);s.default=a.exports}}]);