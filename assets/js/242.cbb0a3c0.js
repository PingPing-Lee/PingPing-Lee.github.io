(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{516:function(t,a,v){"use strict";v.r(a);var e=v(14),l=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"二维坐标系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二维坐标系"}},[t._v("#")]),t._v(" 二维坐标系")]),t._v(" "),a("p",[t._v("在二维坐标系中，默认情况下是与窗口坐标系统相同，坐标单位也是 px，如下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/webgl/base/zbx.png",alt:"二维坐标系"}})]),t._v(" "),a("p",[t._v("图中以相对于浏览器原点的距离的 (10, 10) 为 canvas 的坐标原点，沿x轴向右为正值，沿y轴向下为正值")]),t._v(" "),a("h2",{attrs:{id:"三维坐标系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三维坐标系"}},[t._v("#")]),t._v(" 三维坐标系")]),t._v(" "),a("p",[t._v("在三维坐标系中，除 X Y 轴之外多了一个 Z 轴，如下图：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/webgl/base/zbx3D.png",alt:"三维坐标系"}})]),t._v(" "),a("p",[t._v("需要注意几点不同的是：")]),t._v(" "),a("ul",[a("li",[t._v("WebGL 中坐标值与 Canvas 的尺寸无关，无论Canvas的长宽比是多少，WebGL 的区间值只能在 -1 ~ 1 之间，超出该区间的图像不会绘制")]),t._v(" "),a("li",[t._v("WebGL 中坐标原点不再是画布的左上角，而是画布的中心")]),t._v(" "),a("li",[t._v("X 轴最左边为-1，最右边为1；")]),t._v(" "),a("li",[t._v("Y 轴最下边为-1，最上边为1；")]),t._v(" "),a("li",[t._v("Z 轴朝向你的方向最大值为1，远离你的方向最大值为-1；")])]),t._v(" "),a("h2",{attrs:{id:"转换计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#转换计算"}},[t._v("#")]),t._v(" 转换计算")]),t._v(" "),a("p",[t._v("由上面我们可以知道 WebGL 的取值区间是 -1 ~ 1，和二维坐标系很不同，所以二维坐标点和三维坐标点之间是需要转换的，先通过一张图对转换计算有个了解：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/webgl/base/zbxzh.png",alt:"三维坐标系"}})]),t._v(" "),a("p",[t._v("如果我们想要把图中 P 点 的坐标转换成三位坐标系的值要如何换算呢？")]),t._v(" "),a("ol",[a("li",[t._v("canvas 画布的距浏览器原点的 Rect.top 和 Rect.left 值都是 10, 即 rectTop = 10， rectLeft = 10")]),t._v(" "),a("li",[t._v("canvas 的宽高分别是 canvasWidth = 500 - 10 和 canvasHeight = 500 - 10")]),t._v(" "),a("li",[t._v("因此得到 WebGL 的坐标原点的二维距离是 halfWidth = canvasWidth / 2，halfHeight = canvasHeight / 2")]),t._v(" "),a("li",[t._v("此时假设 P 点到浏览器原点的坐标位置是(clientX, clientY),可以得到 P 点距离 webgl 原点的二维距离 glx = clientX - rectLeft - halfWidth，gly = -(clientY - rectTop - halfHeight)\n"),a("blockquote",[a("p",[t._v("这里需要注意因为 Y轴的正反方向和 二维坐标系中是相反的,所以这里的 gly 要取反")])])]),t._v(" "),a("li",[t._v("因为 WebGL 的取值区间是 -1 ~ 1，所以要把得到的二维距离除以画布的中心点的距离值，最后得到 P 点的三位坐标系是值是 (glx / halfWidth，gly / halfHeight)")])])])}),[],!1,null,null,null);a.default=l.exports}}]);