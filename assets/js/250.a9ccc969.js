(window.webpackJsonp=window.webpackJsonp||[]).push([[250],{524:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("前面通过 gl.drawArrays(gl.POINTS, 0, 3) 绘制了三个点，那如何绘制 线或者面呢？")]),t._v(" "),s("p",[t._v("通过更改 gl.drawArrays 的第一个参数 mode，这个参数指定不同的值，就可以按照不同的规则绘制不同的图形，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 绘制线")]),t._v("\ngl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawArrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LINES")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("来看一下 WebGL 可以绘制的基本图形一览表：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("基本图形")]),t._v(" "),s("th",[t._v("参数mode")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("点")]),t._v(" "),s("td",[t._v("gl.POINTS")]),t._v(" "),s("td",[t._v("⼀系列点")])]),t._v(" "),s("tr",[s("td",[t._v("线段")]),t._v(" "),s("td",[t._v("gl.LINES")]),t._v(" "),s("td",[t._v("⼀系列单独的线段，如果顶点是奇数，最后⼀个会被忽略")])]),t._v(" "),s("tr",[s("td",[t._v("线条")]),t._v(" "),s("td",[t._v("gl.LINE_STRIP")]),t._v(" "),s("td",[t._v("⼀系列连接的线段，不会闭合终点和起点")])]),t._v(" "),s("tr",[s("td",[t._v("闭合线")]),t._v(" "),s("td",[t._v("gl.LINE_LOOP")]),t._v(" "),s("td",[t._v("⼀系列连接的线段，结束时，会闭合终点和起点")])]),t._v(" "),s("tr",[s("td",[t._v("三角形")]),t._v(" "),s("td",[t._v("gl.TRIANGLES")]),t._v(" "),s("td",[t._v("⼀系列单独的三角形")])]),t._v(" "),s("tr",[s("td",[t._v("三角带")]),t._v(" "),s("td",[t._v("gl.TRIANGLE_STRIP")]),t._v(" "),s("td",[t._v("⼀系列条带状的三角形")])]),t._v(" "),s("tr",[s("td",[t._v("三角扇")]),t._v(" "),s("td",[t._v("gl.TRIANGLE_FAN")]),t._v(" "),s("td",[t._v("一系列三角形组成的类似于扇形的图形")])])])]),t._v(" "),s("p",[t._v("WebGL 中可以绘制的基本图形的样式：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/webgl/draw/jbtx.png",alt:"jbtx"}})]),t._v(" "),s("h2",{attrs:{id:"矩形"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#矩形"}},[t._v("#")]),t._v(" 矩形")]),t._v(" "),s("p",[t._v("上面的方法中我们发现并没有四边形，这是因为在三维世界里，从球体到立方体再到游戏里的角色，都是由很多个小三角形构成的，事实上我们可以使用上面的基本图形绘制出任何东西")]),t._v(" "),s("p",[t._v("下面我们就用三角形绘制个矩形处理，首先来看一下图形构图：")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/webgl/draw/rectangle.png",alt:"rectangle"}})]),t._v(" "),s("p",[t._v("由图可知，矩形是由两个三角形(v0,v1,v2) 和(v1,v2,v3) 构成的，然后再通过 gl.TRIANGLE_STRIP 绘制，示例代码如下：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建顶点数据")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" points "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Float32Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 绘制需要四个点")]),t._v("\n  gl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawArrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TRIANGLE_STRIP")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);