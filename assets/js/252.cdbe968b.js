(window.webpackJsonp=window.webpackJsonp||[]).push([[252],{522:function(t,a,s){"use strict";s.r(a);var n=s(14),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("之前我们有使用一个数组来存储多个坐标，通过遍历的方式将坐标数据传递到 attribute中，再通过 drawArrays 绘制出来，示例代码如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" points"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将点的位置传给 aPosition")]),t._v("\n    gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vertexAttrib2f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aPosition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" points"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clickX"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" points"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clickY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 绘制点")]),t._v("\n    gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawArrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POINTS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("显然，这个方法只能绘制一个点，对那些有多个顶点组成的图形，就需要一次性将图形的顶点全部传入顶点着色器，然后再把图形画出来，这种方法比较简单粗暴，其实有更方便的机制，这就要应用到 WebGL 中的缓冲区对象了")]),t._v(" "),a("p",[a("strong",[t._v("缓冲区对象")]),t._v(" 是WebGL系统中的一块内存区域，可以一次性地向缓冲区对象中填充大量的顶点数据，然后将这些数据保存在其中，供顶点着色器使用")]),t._v(" "),a("p",[t._v("下面参考代码一步步学习缓冲区的使用：")]),t._v(" "),a("h2",{attrs:{id:"创建顶点数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建顶点数据"}},[t._v("#")]),t._v(" 创建顶点数据")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" points "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Float32Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("上述代码中，用到了 Float32Array 对象，而不是 JS 中常见的 Array 对象，这是因为 Array 数组是一种通用类型，即可以存数字也可以存字符串，并没有对 大量元素都是同一种类型 做优化")]),t._v(" "),a("h4",{attrs:{id:"类型化数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型化数组"}},[t._v("#")]),t._v(" 类型化数组")]),t._v(" "),a("p",[t._v("在 WebGL 中，需要处理⼤量且相同类型的数据，比如顶点的坐标和颜色数据，为了优化性能， WebGL 为每种基本数据类型引入了类型化数组，让浏览器事先知道数组中的数据类型，处理起来更加有效率")]),t._v(" "),a("p",[t._v("Float32Array 只是类型化数组的一种，还有其他类型化数组，如下表：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("数组类型")]),t._v(" "),a("th",[t._v("所占字节")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Int8Array")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("8位整型")])]),t._v(" "),a("tr",[a("td",[t._v("UInt8Array")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("8位无符号整型")])]),t._v(" "),a("tr",[a("td",[t._v("Int16Array")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("16位整型")])]),t._v(" "),a("tr",[a("td",[t._v("UInt16Array")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("16位无符号整型")])]),t._v(" "),a("tr",[a("td",[t._v("Int32Array")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("32位整型")])]),t._v(" "),a("tr",[a("td",[t._v("UInt32Array")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("32位无符号整型")])]),t._v(" "),a("tr",[a("td",[t._v("Float32Array")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("单精度32位浮点型")])]),t._v(" "),a("tr",[a("td",[t._v("Float64Array")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("双精度64位浮点型")])])])]),t._v(" "),a("h2",{attrs:{id:"创建缓冲区对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建缓冲区对象"}},[t._v("#")]),t._v(" 创建缓冲区对象")]),t._v(" "),a("p",[t._v("WebGL 中调用 gl.createBuffer 方法来创建缓冲区对象，示例代码如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buffer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"绑定缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绑定缓冲区"}},[t._v("#")]),t._v(" 绑定缓冲区")]),t._v(" "),a("p",[t._v("创建缓缓冲区之后，就是将缓冲区对象绑定到 WebGL 中的目标上，调用 gl.bindBuffer 方法，示例代码如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bindBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ARRAY_BUFFER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("代码中的第一个参数除了 gl.ARRAY_BUFFER 以外还可以是其他值，函数规范如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/webgl/draw/bindBuffer.png",alt:"bindBuffer"}})]),t._v(" "),a("h2",{attrs:{id:"向缓冲区对象中写入数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#向缓冲区对象中写入数据"}},[t._v("#")]),t._v(" 向缓冲区对象中写入数据")]),t._v(" "),a("p",[t._v("使用 gl.bufferData 方法来将顶点数据写入到缓冲区对象里")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bufferData")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ARRAY_BUFFER")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" points"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STATIC_DRAW")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("函数规范如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/webgl/draw/bufferData.png",alt:"bufferData"}})]),t._v(" "),a("h2",{attrs:{id:"将缓冲区对象分配给attribute变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将缓冲区对象分配给attribute变量"}},[t._v("#")]),t._v(" 将缓冲区对象分配给attribute变量")]),t._v(" "),a("p",[t._v("前面的学习都是通过 gl.vertexAttrib[1234]f 系列函数为 attribute 变量分配值，但是一次只能分配一个值，如果想要给数组中的全部数据一次性分配值，就需要用到 gl.vertexAttribPointer 方法，示例代码如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("vertexAttribPointer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aPosition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FLOAT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("这个方法的参数较多，规范如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/webgl/draw/vertexAttribPointer.png",alt:"vertexAttribPointer"}})]),t._v(" "),a("h2",{attrs:{id:"开启-attribute-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启-attribute-变量"}},[t._v("#")]),t._v(" 开启 attribute 变量")]),t._v(" "),a("p",[t._v("将整个缓冲区对象分配给attribute 之后，我们需要开启 attribute 变量，示例代码如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("enableVertexAttribArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aPosition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"/img/webgl/draw/enableVertexAttribArray.png",alt:"enableVertexAttribArray"}})]),t._v(" "),a("p",[t._v("同样也可以使用 gl.disableVertexAttribArray() 来关闭分配，示例代码如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("disableVertexAttribArray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aPosition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"/img/webgl/draw/disableVertexAttribArray.png",alt:"disableVertexAttribArray"}})]),t._v(" "),a("h2",{attrs:{id:"绘制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#绘制"}},[t._v("#")]),t._v(" 绘制")]),t._v(" "),a("p",[t._v("依然使用 gl.drawArrays 来绘制多个点，只不过第 2和3个参数需要有变化，示例代码如下：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawArrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("gl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POINTS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("函数规范如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/webgl/draw/drawArrays.png",alt:"drawArrays"}})]),t._v(" "),a("p",[t._v("总结下来整个缓冲区使用流程如下：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/webgl/draw/hcqlc.png",alt:"缓冲区流程"}})])])}),[],!1,null,null,null);a.default=r.exports}}]);