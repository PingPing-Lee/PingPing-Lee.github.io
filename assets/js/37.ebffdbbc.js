(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{311:function(n,t,o){"use strict";o.r(t);var r=o(14),v=Object(r.a)({},(function(){var n=this,t=n._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[t("strong",[n._v("CSS 盒模型")]),n._v(" 规定了网页元素如何显示以及元素间的相互关系")]),n._v(" "),t("p",[n._v("本质上是一个盒子，封装周围的HTML元素，它包括：content(内容区) + padding(填充区) + border(边框区) + margin(外边界区)")]),n._v(" "),t("ul",[t("li",[n._v("content(内容区): 这个区域是用来显示内容，大小可以通过设置 width 和 height")]),n._v(" "),t("li",[n._v("padding(填充区): 包围在内容区域外部的空白区域； 大小通过 padding 相关属性设置")]),n._v(" "),t("li",[n._v("border(边框区): 边框盒包裹内容和内边距。大小通过 border 相关属性设置")]),n._v(" "),t("li",[n._v("margin(外边界区): 这是最外面的区域，是盒子和其他元素之间的空白区域。大小通过 margin 相关属性设置")])]),n._v(" "),t("p",[t("img",{attrs:{src:"/img/css/box/content-box.png",alt:"content-box"}})]),n._v(" "),t("p",[n._v("上图就是一个标准盒模型的结构，其实 "),t("strong",[n._v("CSS 盒模型")]),n._v(" 一共有两种模式："),t("strong",[n._v("标准盒模型")]),n._v(" 和 "),t("strong",[n._v("怪异盒模型")])]),n._v(" "),t("p",[t("strong",[n._v("标准盒模型")]),n._v(" 宽度和高度只包括内容的宽度和高度，实际宽高组成：宽高（content）+ padding + border + margin")]),n._v(" "),t("p",[t("strong",[n._v("怪异盒模型")]),n._v(" 的宽度和高度则包括了内容、内边距和边框，content 把 padding 和 border都算了进去，如下图：")]),n._v(" "),t("p",[t("img",{attrs:{src:"/img/css/box/border-box.png",alt:"border-box"}})]),n._v(" "),t("p",[n._v("两者之间可以通过 "),t("strong",[n._v("box-sizing")]),n._v(" 属性进行转换，"),t("strong",[n._v("box-sizing")]),n._v(" 的属性有两个值 "),t("strong",[n._v("content-box(标准盒模型)")]),n._v(" 和 "),t("strong",[n._v("border-box(怪异盒模型)")])])])}),[],!1,null,null,null);t.default=v.exports}}]);