(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{346:function(t,s,a){"use strict";a.r(s);var r=a(14),n=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-构造函数原型-prototype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-构造函数原型-prototype"}},[t._v("#")]),t._v(" 1.构造函数原型 prototype")]),t._v(" "),s("p",[t._v("构造函数通过 "),s("font",{attrs:{color:"#d63200"}},[t._v("原型")]),t._v(" 分配的函数是所有对象所共享的。"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("JS")])],1),t._v(" 规定，每一个构造函数里面都有一个 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("prototype")])],1),t._v(" 属性，它指向另一个对象，所以这个 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("prototype")])],1),t._v(" 就是一个对象，这个对象的所有属性和方法，都会被构造函数所拥有。"),s("br"),t._v("\n所以可以把一些不变的方法，直接定义在 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("prototype")])],1),t._v(" 对象上，这样所有的对象实例 就可以共享这些方法")],1),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("say")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我叫'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("',是名学生'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" stu "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'木子'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" stu2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'学生2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("say")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我叫木子,是名学生")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("stu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("say "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" stu2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("say"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一般情况下，公共的属性定义到构造函数里面，公共到方法放到原型对象里面")]),t._v("\n")])])]),s("p",[t._v("我们只是把 公共方法定义在 构造函数的 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("prototype")])],1),t._v(" 原型对象上，为什么实例化出来的对象，也能访问这个方法呢？"),s("br"),t._v("\n想要弄明白这个问题，就要知道 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("__ proto __")])],1),t._v(" 的存在")]),t._v(" "),s("h2",{attrs:{id:"_2-对象的原型-proto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-对象的原型-proto"}},[t._v("#")]),t._v(" 2.对象的原型 __ proto __")]),t._v(" "),s("p",[t._v("对象都有一个 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("__ proto __")])],1),t._v(" 属性，指向构造函数的 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("prototype")])],1),t._v(" 原型对象，所以我们实例化出来的对象可以使用构造函数的 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("prototype")])],1),t._v(" 原型对象的属性和方法即可。")]),t._v(" "),s("ul",[s("li",[s("font",{attrs:{color:"#d63200"}},[t._v("总结：")]),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("__ proto __")])],1),t._v(" 对象原型和和原型对象 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("prototype")])],1),t._v(" 是等价的。"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("__ proto __")])],1),t._v(" 对象原型的意义就在于 为对象的查找机制提供一个方向，或者说一条线路，但是它是一个非标准属性。因此在实际开发中，不可以使用这个属性，他只是内部指向原型对象 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("prototype")])],1),t._v(" 。")],1)]),t._v(" "),s("h2",{attrs:{id:"_3-constructor-构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-constructor-构造函数"}},[t._v("#")]),t._v(" 3.constructor 构造函数")]),t._v(" "),s("p",[t._v("对象原型 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("__ proto __")])],1),t._v(" 和构造函数 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("prototype")])],1),t._v(" 原型对象里面都有一个属性 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("constructor")])],1),t._v(" 属性，称之为 "),s("font",{attrs:{color:"#d63200"}},[t._v("构造函数")]),t._v("，因为它指回构造函数本身。"),s("br"),t._v(" "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("constructor")])],1),t._v(" 主要用于记录该对象引用于哪个构造函数，也可以让原型对象重新指向原来的构造函数")],1),t._v(" "),s("h2",{attrs:{id:"_4-原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-原型链"}},[t._v("#")]),t._v(" 4.原型链")]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/js/prototype.png",alt:"原型链"}})]),t._v(" "),s("h2",{attrs:{id:"_5-js-的成员查找机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-js-的成员查找机制"}},[t._v("#")]),t._v(" 5.JS 的成员查找机制")]),t._v(" "),s("p",[s("strong",[t._v("1. 当访问一个对象的属性（包括方法）时，首先查找这个对象自身有没有该属性")]),s("br"),t._v(" "),s("strong",[t._v("2. 如果没有就查找它的原型（也就是  "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("__ proto __")])],1),t._v(" 指向的 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("prototype")])],1),t._v(" 原型对象）")]),s("br"),t._v(" "),s("strong",[t._v("3. 如果还没有就查找原型对象的原型（也就是  "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Object")])],1),t._v(" 的原型对象）")]),s("br"),t._v(" "),s("strong",[t._v("4. 以此类推，一只查找到 "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Object")])],1),t._v(" 的原型为止 （ "),s("em",[s("font",{attrs:{color:"#d63200"}},[t._v("Object")])],1),t._v(" ）")])])])}),[],!1,null,null,null);s.default=n.exports}}]);